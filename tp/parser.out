Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    SOLIDUS
    UNICODE_HEX
    TAB_CHAR
    FORM_FEED_CHAR
    BACKSPACE_CHAR
    LINE_FEED_CHAR
    CARRIAGE_RETURN_CHAR
    ESCAPE
    REVERSE_SOLIDUS

Grammar

Rule 0     S' -> value
Rule 1     value -> string
Rule 2     value -> number
Rule 3     value -> object
Rule 4     value -> array
Rule 5     value -> TRUE
Rule 6     value -> FALSE
Rule 7     value -> NULL
Rule 8     object -> BEGIN_OBJECT END_OBJECT
Rule 9     object -> object_begin members object_end
Rule 10    object_begin -> BEGIN_OBJECT
Rule 11    object_end -> END_OBJECT
Rule 12    members -> pair
Rule 13    members -> pair_and_separator members
Rule 14    pair_and_separator -> pair VALUE_SEPARATOR
Rule 15    pair -> key value_abst
Rule 16    value_abst -> value
Rule 17    key -> string NAME_SEPARATOR
Rule 18    elements -> <empty>
Rule 19    elements -> elements_not_final
Rule 20    elements -> elements_final
Rule 21    elements_not_final -> elements value VALUE_SEPARATOR
Rule 22    elements_final -> elements value
Rule 23    array -> array_begin elements array_end
Rule 24    array -> BEGIN_ARRAY END_ARRAY
Rule 25    array_begin -> BEGIN_ARRAY
Rule 26    array_end -> END_ARRAY
Rule 27    number -> integer
Rule 28    number -> float
Rule 29    number -> MINUS integer
Rule 30    number -> MINUS float
Rule 31    integer -> int
Rule 32    integer -> int exp
Rule 33    float -> int frac
Rule 34    float -> int frac exp
Rule 35    exp -> E MINUS DIGITS
Rule 36    exp -> E DIGITS
Rule 37    exp -> E PLUS DIGITS
Rule 38    frac -> DECIMAL_POINT DIGITS
Rule 39    int -> ZERO
Rule 40    int -> DIGITS
Rule 41    string -> QUOTATION_MARK chars QUOTATION_MARK
Rule 42    chars -> <empty>
Rule 43    chars -> chars char
Rule 44    char -> UNESCAPED

Terminals, with rules where they appear

BACKSPACE_CHAR       : 
BEGIN_ARRAY          : 24 25
BEGIN_OBJECT         : 8 10
CARRIAGE_RETURN_CHAR : 
DECIMAL_POINT        : 38
DIGITS               : 35 36 37 38 40
E                    : 35 36 37
END_ARRAY            : 24 26
END_OBJECT           : 8 11
ESCAPE               : 
FALSE                : 6
FORM_FEED_CHAR       : 
LINE_FEED_CHAR       : 
MINUS                : 29 30 35
NAME_SEPARATOR       : 17
NULL                 : 7
PLUS                 : 37
QUOTATION_MARK       : 41 41
REVERSE_SOLIDUS      : 
SOLIDUS              : 
TAB_CHAR             : 
TRUE                 : 5
UNESCAPED            : 44
UNICODE_HEX          : 
VALUE_SEPARATOR      : 14 21
ZERO                 : 39
error                : 

Nonterminals, with rules where they appear

array                : 4
array_begin          : 23
array_end            : 23
char                 : 43
chars                : 41 43
elements             : 21 22 23
elements_final       : 20
elements_not_final   : 19
exp                  : 32 34
float                : 28 30
frac                 : 33 34
int                  : 31 32 33 34
integer              : 27 29
key                  : 15
members              : 9 13
number               : 2
object               : 3
object_begin         : 9
object_end           : 9
pair                 : 12 14
pair_and_separator   : 13
string               : 1 17
value                : 16 21 22 0
value_abst           : 15

Parsing method: LALR

state 0

    (0) S' -> . value
    (1) value -> . string
    (2) value -> . number
    (3) value -> . object
    (4) value -> . array
    (5) value -> . TRUE
    (6) value -> . FALSE
    (7) value -> . NULL
    (41) string -> . QUOTATION_MARK chars QUOTATION_MARK
    (27) number -> . integer
    (28) number -> . float
    (29) number -> . MINUS integer
    (30) number -> . MINUS float
    (8) object -> . BEGIN_OBJECT END_OBJECT
    (9) object -> . object_begin members object_end
    (23) array -> . array_begin elements array_end
    (24) array -> . BEGIN_ARRAY END_ARRAY
    (31) integer -> . int
    (32) integer -> . int exp
    (33) float -> . int frac
    (34) float -> . int frac exp
    (10) object_begin -> . BEGIN_OBJECT
    (25) array_begin -> . BEGIN_ARRAY
    (39) int -> . ZERO
    (40) int -> . DIGITS

    TRUE            shift and go to state 9
    FALSE           shift and go to state 18
    NULL            shift and go to state 8
    QUOTATION_MARK  shift and go to state 6
    MINUS           shift and go to state 10
    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2
    ZERO            shift and go to state 15
    DIGITS          shift and go to state 11

    float                          shift and go to state 4
    string                         shift and go to state 13
    int                            shift and go to state 3
    object                         shift and go to state 14
    number                         shift and go to state 5
    value                          shift and go to state 19
    array_begin                    shift and go to state 12
    object_begin                   shift and go to state 17
    integer                        shift and go to state 16
    array                          shift and go to state 7

state 1

    (8) object -> BEGIN_OBJECT . END_OBJECT
    (10) object_begin -> BEGIN_OBJECT .

    END_OBJECT      shift and go to state 20
    QUOTATION_MARK  reduce using rule 10 (object_begin -> BEGIN_OBJECT .)


state 2

    (24) array -> BEGIN_ARRAY . END_ARRAY
    (25) array_begin -> BEGIN_ARRAY .

  ! shift/reduce conflict for END_ARRAY resolved as shift
    END_ARRAY       shift and go to state 21
    TRUE            reduce using rule 25 (array_begin -> BEGIN_ARRAY .)
    FALSE           reduce using rule 25 (array_begin -> BEGIN_ARRAY .)
    NULL            reduce using rule 25 (array_begin -> BEGIN_ARRAY .)
    QUOTATION_MARK  reduce using rule 25 (array_begin -> BEGIN_ARRAY .)
    MINUS           reduce using rule 25 (array_begin -> BEGIN_ARRAY .)
    BEGIN_OBJECT    reduce using rule 25 (array_begin -> BEGIN_ARRAY .)
    BEGIN_ARRAY     reduce using rule 25 (array_begin -> BEGIN_ARRAY .)
    ZERO            reduce using rule 25 (array_begin -> BEGIN_ARRAY .)
    DIGITS          reduce using rule 25 (array_begin -> BEGIN_ARRAY .)

  ! END_ARRAY       [ reduce using rule 25 (array_begin -> BEGIN_ARRAY .) ]


state 3

    (31) integer -> int .
    (32) integer -> int . exp
    (33) float -> int . frac
    (34) float -> int . frac exp
    (35) exp -> . E MINUS DIGITS
    (36) exp -> . E DIGITS
    (37) exp -> . E PLUS DIGITS
    (38) frac -> . DECIMAL_POINT DIGITS

    $end            reduce using rule 31 (integer -> int .)
    VALUE_SEPARATOR reduce using rule 31 (integer -> int .)
    END_ARRAY       reduce using rule 31 (integer -> int .)
    TRUE            reduce using rule 31 (integer -> int .)
    FALSE           reduce using rule 31 (integer -> int .)
    NULL            reduce using rule 31 (integer -> int .)
    QUOTATION_MARK  reduce using rule 31 (integer -> int .)
    MINUS           reduce using rule 31 (integer -> int .)
    BEGIN_OBJECT    reduce using rule 31 (integer -> int .)
    BEGIN_ARRAY     reduce using rule 31 (integer -> int .)
    ZERO            reduce using rule 31 (integer -> int .)
    DIGITS          reduce using rule 31 (integer -> int .)
    END_OBJECT      reduce using rule 31 (integer -> int .)
    E               shift and go to state 22
    DECIMAL_POINT   shift and go to state 24

    frac                           shift and go to state 25
    exp                            shift and go to state 23

state 4

    (28) number -> float .

    VALUE_SEPARATOR reduce using rule 28 (number -> float .)
    END_ARRAY       reduce using rule 28 (number -> float .)
    TRUE            reduce using rule 28 (number -> float .)
    FALSE           reduce using rule 28 (number -> float .)
    NULL            reduce using rule 28 (number -> float .)
    QUOTATION_MARK  reduce using rule 28 (number -> float .)
    MINUS           reduce using rule 28 (number -> float .)
    BEGIN_OBJECT    reduce using rule 28 (number -> float .)
    BEGIN_ARRAY     reduce using rule 28 (number -> float .)
    ZERO            reduce using rule 28 (number -> float .)
    DIGITS          reduce using rule 28 (number -> float .)
    END_OBJECT      reduce using rule 28 (number -> float .)
    $end            reduce using rule 28 (number -> float .)


state 5

    (2) value -> number .

    VALUE_SEPARATOR reduce using rule 2 (value -> number .)
    END_OBJECT      reduce using rule 2 (value -> number .)
    $end            reduce using rule 2 (value -> number .)
    END_ARRAY       reduce using rule 2 (value -> number .)
    TRUE            reduce using rule 2 (value -> number .)
    FALSE           reduce using rule 2 (value -> number .)
    NULL            reduce using rule 2 (value -> number .)
    QUOTATION_MARK  reduce using rule 2 (value -> number .)
    MINUS           reduce using rule 2 (value -> number .)
    BEGIN_OBJECT    reduce using rule 2 (value -> number .)
    BEGIN_ARRAY     reduce using rule 2 (value -> number .)
    ZERO            reduce using rule 2 (value -> number .)
    DIGITS          reduce using rule 2 (value -> number .)


state 6

    (41) string -> QUOTATION_MARK . chars QUOTATION_MARK
    (42) chars -> .
    (43) chars -> . chars char

    QUOTATION_MARK  reduce using rule 42 (chars -> .)
    UNESCAPED       reduce using rule 42 (chars -> .)

    chars                          shift and go to state 26

state 7

    (4) value -> array .

    VALUE_SEPARATOR reduce using rule 4 (value -> array .)
    END_OBJECT      reduce using rule 4 (value -> array .)
    $end            reduce using rule 4 (value -> array .)
    END_ARRAY       reduce using rule 4 (value -> array .)
    TRUE            reduce using rule 4 (value -> array .)
    FALSE           reduce using rule 4 (value -> array .)
    NULL            reduce using rule 4 (value -> array .)
    QUOTATION_MARK  reduce using rule 4 (value -> array .)
    MINUS           reduce using rule 4 (value -> array .)
    BEGIN_OBJECT    reduce using rule 4 (value -> array .)
    BEGIN_ARRAY     reduce using rule 4 (value -> array .)
    ZERO            reduce using rule 4 (value -> array .)
    DIGITS          reduce using rule 4 (value -> array .)


state 8

    (7) value -> NULL .

    VALUE_SEPARATOR reduce using rule 7 (value -> NULL .)
    END_OBJECT      reduce using rule 7 (value -> NULL .)
    $end            reduce using rule 7 (value -> NULL .)
    END_ARRAY       reduce using rule 7 (value -> NULL .)
    TRUE            reduce using rule 7 (value -> NULL .)
    FALSE           reduce using rule 7 (value -> NULL .)
    NULL            reduce using rule 7 (value -> NULL .)
    QUOTATION_MARK  reduce using rule 7 (value -> NULL .)
    MINUS           reduce using rule 7 (value -> NULL .)
    BEGIN_OBJECT    reduce using rule 7 (value -> NULL .)
    BEGIN_ARRAY     reduce using rule 7 (value -> NULL .)
    ZERO            reduce using rule 7 (value -> NULL .)
    DIGITS          reduce using rule 7 (value -> NULL .)


state 9

    (5) value -> TRUE .

    VALUE_SEPARATOR reduce using rule 5 (value -> TRUE .)
    END_OBJECT      reduce using rule 5 (value -> TRUE .)
    $end            reduce using rule 5 (value -> TRUE .)
    END_ARRAY       reduce using rule 5 (value -> TRUE .)
    TRUE            reduce using rule 5 (value -> TRUE .)
    FALSE           reduce using rule 5 (value -> TRUE .)
    NULL            reduce using rule 5 (value -> TRUE .)
    QUOTATION_MARK  reduce using rule 5 (value -> TRUE .)
    MINUS           reduce using rule 5 (value -> TRUE .)
    BEGIN_OBJECT    reduce using rule 5 (value -> TRUE .)
    BEGIN_ARRAY     reduce using rule 5 (value -> TRUE .)
    ZERO            reduce using rule 5 (value -> TRUE .)
    DIGITS          reduce using rule 5 (value -> TRUE .)


state 10

    (29) number -> MINUS . integer
    (30) number -> MINUS . float
    (31) integer -> . int
    (32) integer -> . int exp
    (33) float -> . int frac
    (34) float -> . int frac exp
    (39) int -> . ZERO
    (40) int -> . DIGITS

    ZERO            shift and go to state 15
    DIGITS          shift and go to state 11

    int                            shift and go to state 3
    integer                        shift and go to state 28
    float                          shift and go to state 27

state 11

    (40) int -> DIGITS .

    E               reduce using rule 40 (int -> DIGITS .)
    DECIMAL_POINT   reduce using rule 40 (int -> DIGITS .)
    VALUE_SEPARATOR reduce using rule 40 (int -> DIGITS .)
    END_ARRAY       reduce using rule 40 (int -> DIGITS .)
    TRUE            reduce using rule 40 (int -> DIGITS .)
    FALSE           reduce using rule 40 (int -> DIGITS .)
    NULL            reduce using rule 40 (int -> DIGITS .)
    QUOTATION_MARK  reduce using rule 40 (int -> DIGITS .)
    MINUS           reduce using rule 40 (int -> DIGITS .)
    BEGIN_OBJECT    reduce using rule 40 (int -> DIGITS .)
    BEGIN_ARRAY     reduce using rule 40 (int -> DIGITS .)
    ZERO            reduce using rule 40 (int -> DIGITS .)
    DIGITS          reduce using rule 40 (int -> DIGITS .)
    $end            reduce using rule 40 (int -> DIGITS .)
    END_OBJECT      reduce using rule 40 (int -> DIGITS .)


state 12

    (23) array -> array_begin . elements array_end
    (18) elements -> .
    (19) elements -> . elements_not_final
    (20) elements -> . elements_final
    (21) elements_not_final -> . elements value VALUE_SEPARATOR
    (22) elements_final -> . elements value

    END_ARRAY       reduce using rule 18 (elements -> .)
    TRUE            reduce using rule 18 (elements -> .)
    FALSE           reduce using rule 18 (elements -> .)
    NULL            reduce using rule 18 (elements -> .)
    QUOTATION_MARK  reduce using rule 18 (elements -> .)
    MINUS           reduce using rule 18 (elements -> .)
    BEGIN_OBJECT    reduce using rule 18 (elements -> .)
    BEGIN_ARRAY     reduce using rule 18 (elements -> .)
    ZERO            reduce using rule 18 (elements -> .)
    DIGITS          reduce using rule 18 (elements -> .)

    elements_not_final             shift and go to state 29
    elements                       shift and go to state 30
    elements_final                 shift and go to state 31

state 13

    (1) value -> string .

    VALUE_SEPARATOR reduce using rule 1 (value -> string .)
    END_OBJECT      reduce using rule 1 (value -> string .)
    $end            reduce using rule 1 (value -> string .)
    END_ARRAY       reduce using rule 1 (value -> string .)
    TRUE            reduce using rule 1 (value -> string .)
    FALSE           reduce using rule 1 (value -> string .)
    NULL            reduce using rule 1 (value -> string .)
    QUOTATION_MARK  reduce using rule 1 (value -> string .)
    MINUS           reduce using rule 1 (value -> string .)
    BEGIN_OBJECT    reduce using rule 1 (value -> string .)
    BEGIN_ARRAY     reduce using rule 1 (value -> string .)
    ZERO            reduce using rule 1 (value -> string .)
    DIGITS          reduce using rule 1 (value -> string .)


state 14

    (3) value -> object .

    VALUE_SEPARATOR reduce using rule 3 (value -> object .)
    END_OBJECT      reduce using rule 3 (value -> object .)
    $end            reduce using rule 3 (value -> object .)
    END_ARRAY       reduce using rule 3 (value -> object .)
    TRUE            reduce using rule 3 (value -> object .)
    FALSE           reduce using rule 3 (value -> object .)
    NULL            reduce using rule 3 (value -> object .)
    QUOTATION_MARK  reduce using rule 3 (value -> object .)
    MINUS           reduce using rule 3 (value -> object .)
    BEGIN_OBJECT    reduce using rule 3 (value -> object .)
    BEGIN_ARRAY     reduce using rule 3 (value -> object .)
    ZERO            reduce using rule 3 (value -> object .)
    DIGITS          reduce using rule 3 (value -> object .)


state 15

    (39) int -> ZERO .

    E               reduce using rule 39 (int -> ZERO .)
    DECIMAL_POINT   reduce using rule 39 (int -> ZERO .)
    VALUE_SEPARATOR reduce using rule 39 (int -> ZERO .)
    END_ARRAY       reduce using rule 39 (int -> ZERO .)
    TRUE            reduce using rule 39 (int -> ZERO .)
    FALSE           reduce using rule 39 (int -> ZERO .)
    NULL            reduce using rule 39 (int -> ZERO .)
    QUOTATION_MARK  reduce using rule 39 (int -> ZERO .)
    MINUS           reduce using rule 39 (int -> ZERO .)
    BEGIN_OBJECT    reduce using rule 39 (int -> ZERO .)
    BEGIN_ARRAY     reduce using rule 39 (int -> ZERO .)
    ZERO            reduce using rule 39 (int -> ZERO .)
    DIGITS          reduce using rule 39 (int -> ZERO .)
    $end            reduce using rule 39 (int -> ZERO .)
    END_OBJECT      reduce using rule 39 (int -> ZERO .)


state 16

    (27) number -> integer .

    VALUE_SEPARATOR reduce using rule 27 (number -> integer .)
    END_ARRAY       reduce using rule 27 (number -> integer .)
    TRUE            reduce using rule 27 (number -> integer .)
    FALSE           reduce using rule 27 (number -> integer .)
    NULL            reduce using rule 27 (number -> integer .)
    QUOTATION_MARK  reduce using rule 27 (number -> integer .)
    MINUS           reduce using rule 27 (number -> integer .)
    BEGIN_OBJECT    reduce using rule 27 (number -> integer .)
    BEGIN_ARRAY     reduce using rule 27 (number -> integer .)
    ZERO            reduce using rule 27 (number -> integer .)
    DIGITS          reduce using rule 27 (number -> integer .)
    END_OBJECT      reduce using rule 27 (number -> integer .)
    $end            reduce using rule 27 (number -> integer .)


state 17

    (9) object -> object_begin . members object_end
    (12) members -> . pair
    (13) members -> . pair_and_separator members
    (15) pair -> . key value_abst
    (14) pair_and_separator -> . pair VALUE_SEPARATOR
    (17) key -> . string NAME_SEPARATOR
    (41) string -> . QUOTATION_MARK chars QUOTATION_MARK

    QUOTATION_MARK  shift and go to state 6

    members                        shift and go to state 32
    pair_and_separator             shift and go to state 33
    key                            shift and go to state 34
    pair                           shift and go to state 35
    string                         shift and go to state 36

state 18

    (6) value -> FALSE .

    VALUE_SEPARATOR reduce using rule 6 (value -> FALSE .)
    END_OBJECT      reduce using rule 6 (value -> FALSE .)
    $end            reduce using rule 6 (value -> FALSE .)
    END_ARRAY       reduce using rule 6 (value -> FALSE .)
    TRUE            reduce using rule 6 (value -> FALSE .)
    FALSE           reduce using rule 6 (value -> FALSE .)
    NULL            reduce using rule 6 (value -> FALSE .)
    QUOTATION_MARK  reduce using rule 6 (value -> FALSE .)
    MINUS           reduce using rule 6 (value -> FALSE .)
    BEGIN_OBJECT    reduce using rule 6 (value -> FALSE .)
    BEGIN_ARRAY     reduce using rule 6 (value -> FALSE .)
    ZERO            reduce using rule 6 (value -> FALSE .)
    DIGITS          reduce using rule 6 (value -> FALSE .)


state 19

    (0) S' -> value .



state 20

    (8) object -> BEGIN_OBJECT END_OBJECT .

    $end            reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    VALUE_SEPARATOR reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    END_ARRAY       reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    TRUE            reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    FALSE           reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    NULL            reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    QUOTATION_MARK  reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    MINUS           reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    BEGIN_OBJECT    reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    BEGIN_ARRAY     reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    ZERO            reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    DIGITS          reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)
    END_OBJECT      reduce using rule 8 (object -> BEGIN_OBJECT END_OBJECT .)


state 21

    (24) array -> BEGIN_ARRAY END_ARRAY .

    VALUE_SEPARATOR reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    END_ARRAY       reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    TRUE            reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    FALSE           reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    NULL            reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    QUOTATION_MARK  reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    MINUS           reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    BEGIN_OBJECT    reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    BEGIN_ARRAY     reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    ZERO            reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    DIGITS          reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    END_OBJECT      reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)
    $end            reduce using rule 24 (array -> BEGIN_ARRAY END_ARRAY .)


state 22

    (35) exp -> E . MINUS DIGITS
    (36) exp -> E . DIGITS
    (37) exp -> E . PLUS DIGITS

    MINUS           shift and go to state 39
    DIGITS          shift and go to state 37
    PLUS            shift and go to state 38


state 23

    (32) integer -> int exp .

    $end            reduce using rule 32 (integer -> int exp .)
    VALUE_SEPARATOR reduce using rule 32 (integer -> int exp .)
    END_ARRAY       reduce using rule 32 (integer -> int exp .)
    TRUE            reduce using rule 32 (integer -> int exp .)
    FALSE           reduce using rule 32 (integer -> int exp .)
    NULL            reduce using rule 32 (integer -> int exp .)
    QUOTATION_MARK  reduce using rule 32 (integer -> int exp .)
    MINUS           reduce using rule 32 (integer -> int exp .)
    BEGIN_OBJECT    reduce using rule 32 (integer -> int exp .)
    BEGIN_ARRAY     reduce using rule 32 (integer -> int exp .)
    ZERO            reduce using rule 32 (integer -> int exp .)
    DIGITS          reduce using rule 32 (integer -> int exp .)
    END_OBJECT      reduce using rule 32 (integer -> int exp .)


state 24

    (38) frac -> DECIMAL_POINT . DIGITS

    DIGITS          shift and go to state 40


state 25

    (33) float -> int frac .
    (34) float -> int frac . exp
    (35) exp -> . E MINUS DIGITS
    (36) exp -> . E DIGITS
    (37) exp -> . E PLUS DIGITS

    $end            reduce using rule 33 (float -> int frac .)
    VALUE_SEPARATOR reduce using rule 33 (float -> int frac .)
    END_ARRAY       reduce using rule 33 (float -> int frac .)
    TRUE            reduce using rule 33 (float -> int frac .)
    FALSE           reduce using rule 33 (float -> int frac .)
    NULL            reduce using rule 33 (float -> int frac .)
    QUOTATION_MARK  reduce using rule 33 (float -> int frac .)
    MINUS           reduce using rule 33 (float -> int frac .)
    BEGIN_OBJECT    reduce using rule 33 (float -> int frac .)
    BEGIN_ARRAY     reduce using rule 33 (float -> int frac .)
    ZERO            reduce using rule 33 (float -> int frac .)
    DIGITS          reduce using rule 33 (float -> int frac .)
    END_OBJECT      reduce using rule 33 (float -> int frac .)
    E               shift and go to state 22

    exp                            shift and go to state 41

state 26

    (41) string -> QUOTATION_MARK chars . QUOTATION_MARK
    (43) chars -> chars . char
    (44) char -> . UNESCAPED

    QUOTATION_MARK  shift and go to state 42
    UNESCAPED       shift and go to state 44

    char                           shift and go to state 43

state 27

    (30) number -> MINUS float .

    VALUE_SEPARATOR reduce using rule 30 (number -> MINUS float .)
    END_ARRAY       reduce using rule 30 (number -> MINUS float .)
    TRUE            reduce using rule 30 (number -> MINUS float .)
    FALSE           reduce using rule 30 (number -> MINUS float .)
    NULL            reduce using rule 30 (number -> MINUS float .)
    QUOTATION_MARK  reduce using rule 30 (number -> MINUS float .)
    MINUS           reduce using rule 30 (number -> MINUS float .)
    BEGIN_OBJECT    reduce using rule 30 (number -> MINUS float .)
    BEGIN_ARRAY     reduce using rule 30 (number -> MINUS float .)
    ZERO            reduce using rule 30 (number -> MINUS float .)
    DIGITS          reduce using rule 30 (number -> MINUS float .)
    END_OBJECT      reduce using rule 30 (number -> MINUS float .)
    $end            reduce using rule 30 (number -> MINUS float .)


state 28

    (29) number -> MINUS integer .

    VALUE_SEPARATOR reduce using rule 29 (number -> MINUS integer .)
    END_ARRAY       reduce using rule 29 (number -> MINUS integer .)
    TRUE            reduce using rule 29 (number -> MINUS integer .)
    FALSE           reduce using rule 29 (number -> MINUS integer .)
    NULL            reduce using rule 29 (number -> MINUS integer .)
    QUOTATION_MARK  reduce using rule 29 (number -> MINUS integer .)
    MINUS           reduce using rule 29 (number -> MINUS integer .)
    BEGIN_OBJECT    reduce using rule 29 (number -> MINUS integer .)
    BEGIN_ARRAY     reduce using rule 29 (number -> MINUS integer .)
    ZERO            reduce using rule 29 (number -> MINUS integer .)
    DIGITS          reduce using rule 29 (number -> MINUS integer .)
    END_OBJECT      reduce using rule 29 (number -> MINUS integer .)
    $end            reduce using rule 29 (number -> MINUS integer .)


state 29

    (19) elements -> elements_not_final .

    END_ARRAY       reduce using rule 19 (elements -> elements_not_final .)
    TRUE            reduce using rule 19 (elements -> elements_not_final .)
    FALSE           reduce using rule 19 (elements -> elements_not_final .)
    NULL            reduce using rule 19 (elements -> elements_not_final .)
    QUOTATION_MARK  reduce using rule 19 (elements -> elements_not_final .)
    MINUS           reduce using rule 19 (elements -> elements_not_final .)
    BEGIN_OBJECT    reduce using rule 19 (elements -> elements_not_final .)
    BEGIN_ARRAY     reduce using rule 19 (elements -> elements_not_final .)
    ZERO            reduce using rule 19 (elements -> elements_not_final .)
    DIGITS          reduce using rule 19 (elements -> elements_not_final .)


state 30

    (23) array -> array_begin elements . array_end
    (21) elements_not_final -> elements . value VALUE_SEPARATOR
    (22) elements_final -> elements . value
    (26) array_end -> . END_ARRAY
    (1) value -> . string
    (2) value -> . number
    (3) value -> . object
    (4) value -> . array
    (5) value -> . TRUE
    (6) value -> . FALSE
    (7) value -> . NULL
    (41) string -> . QUOTATION_MARK chars QUOTATION_MARK
    (27) number -> . integer
    (28) number -> . float
    (29) number -> . MINUS integer
    (30) number -> . MINUS float
    (8) object -> . BEGIN_OBJECT END_OBJECT
    (9) object -> . object_begin members object_end
    (23) array -> . array_begin elements array_end
    (24) array -> . BEGIN_ARRAY END_ARRAY
    (31) integer -> . int
    (32) integer -> . int exp
    (33) float -> . int frac
    (34) float -> . int frac exp
    (10) object_begin -> . BEGIN_OBJECT
    (25) array_begin -> . BEGIN_ARRAY
    (39) int -> . ZERO
    (40) int -> . DIGITS

    END_ARRAY       shift and go to state 45
    TRUE            shift and go to state 9
    FALSE           shift and go to state 18
    NULL            shift and go to state 8
    QUOTATION_MARK  shift and go to state 6
    MINUS           shift and go to state 10
    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2
    ZERO            shift and go to state 15
    DIGITS          shift and go to state 11

    string                         shift and go to state 13
    float                          shift and go to state 4
    object                         shift and go to state 14
    number                         shift and go to state 5
    value                          shift and go to state 46
    int                            shift and go to state 3
    array_begin                    shift and go to state 12
    object_begin                   shift and go to state 17
    array_end                      shift and go to state 47
    integer                        shift and go to state 16
    array                          shift and go to state 7

state 31

    (20) elements -> elements_final .

    END_ARRAY       reduce using rule 20 (elements -> elements_final .)
    TRUE            reduce using rule 20 (elements -> elements_final .)
    FALSE           reduce using rule 20 (elements -> elements_final .)
    NULL            reduce using rule 20 (elements -> elements_final .)
    QUOTATION_MARK  reduce using rule 20 (elements -> elements_final .)
    MINUS           reduce using rule 20 (elements -> elements_final .)
    BEGIN_OBJECT    reduce using rule 20 (elements -> elements_final .)
    BEGIN_ARRAY     reduce using rule 20 (elements -> elements_final .)
    ZERO            reduce using rule 20 (elements -> elements_final .)
    DIGITS          reduce using rule 20 (elements -> elements_final .)


state 32

    (9) object -> object_begin members . object_end
    (11) object_end -> . END_OBJECT

    END_OBJECT      shift and go to state 49

    object_end                     shift and go to state 48

state 33

    (13) members -> pair_and_separator . members
    (12) members -> . pair
    (13) members -> . pair_and_separator members
    (15) pair -> . key value_abst
    (14) pair_and_separator -> . pair VALUE_SEPARATOR
    (17) key -> . string NAME_SEPARATOR
    (41) string -> . QUOTATION_MARK chars QUOTATION_MARK

    QUOTATION_MARK  shift and go to state 6

    members                        shift and go to state 50
    pair_and_separator             shift and go to state 33
    key                            shift and go to state 34
    pair                           shift and go to state 35
    string                         shift and go to state 36

state 34

    (15) pair -> key . value_abst
    (16) value_abst -> . value
    (1) value -> . string
    (2) value -> . number
    (3) value -> . object
    (4) value -> . array
    (5) value -> . TRUE
    (6) value -> . FALSE
    (7) value -> . NULL
    (41) string -> . QUOTATION_MARK chars QUOTATION_MARK
    (27) number -> . integer
    (28) number -> . float
    (29) number -> . MINUS integer
    (30) number -> . MINUS float
    (8) object -> . BEGIN_OBJECT END_OBJECT
    (9) object -> . object_begin members object_end
    (23) array -> . array_begin elements array_end
    (24) array -> . BEGIN_ARRAY END_ARRAY
    (31) integer -> . int
    (32) integer -> . int exp
    (33) float -> . int frac
    (34) float -> . int frac exp
    (10) object_begin -> . BEGIN_OBJECT
    (25) array_begin -> . BEGIN_ARRAY
    (39) int -> . ZERO
    (40) int -> . DIGITS

    TRUE            shift and go to state 9
    FALSE           shift and go to state 18
    NULL            shift and go to state 8
    QUOTATION_MARK  shift and go to state 6
    MINUS           shift and go to state 10
    BEGIN_OBJECT    shift and go to state 1
    BEGIN_ARRAY     shift and go to state 2
    ZERO            shift and go to state 15
    DIGITS          shift and go to state 11

    value_abst                     shift and go to state 51
    float                          shift and go to state 4
    string                         shift and go to state 13
    int                            shift and go to state 3
    object                         shift and go to state 14
    number                         shift and go to state 5
    value                          shift and go to state 52
    array_begin                    shift and go to state 12
    object_begin                   shift and go to state 17
    integer                        shift and go to state 16
    array                          shift and go to state 7

state 35

    (12) members -> pair .
    (14) pair_and_separator -> pair . VALUE_SEPARATOR

    END_OBJECT      reduce using rule 12 (members -> pair .)
    VALUE_SEPARATOR shift and go to state 53


state 36

    (17) key -> string . NAME_SEPARATOR

    NAME_SEPARATOR  shift and go to state 54


state 37

    (36) exp -> E DIGITS .

    $end            reduce using rule 36 (exp -> E DIGITS .)
    VALUE_SEPARATOR reduce using rule 36 (exp -> E DIGITS .)
    END_ARRAY       reduce using rule 36 (exp -> E DIGITS .)
    TRUE            reduce using rule 36 (exp -> E DIGITS .)
    FALSE           reduce using rule 36 (exp -> E DIGITS .)
    NULL            reduce using rule 36 (exp -> E DIGITS .)
    QUOTATION_MARK  reduce using rule 36 (exp -> E DIGITS .)
    MINUS           reduce using rule 36 (exp -> E DIGITS .)
    BEGIN_OBJECT    reduce using rule 36 (exp -> E DIGITS .)
    BEGIN_ARRAY     reduce using rule 36 (exp -> E DIGITS .)
    ZERO            reduce using rule 36 (exp -> E DIGITS .)
    DIGITS          reduce using rule 36 (exp -> E DIGITS .)
    END_OBJECT      reduce using rule 36 (exp -> E DIGITS .)


state 38

    (37) exp -> E PLUS . DIGITS

    DIGITS          shift and go to state 55


state 39

    (35) exp -> E MINUS . DIGITS

    DIGITS          shift and go to state 56


state 40

    (38) frac -> DECIMAL_POINT DIGITS .

    E               reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    $end            reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    VALUE_SEPARATOR reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    END_ARRAY       reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    TRUE            reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    FALSE           reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    NULL            reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    QUOTATION_MARK  reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    MINUS           reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    BEGIN_OBJECT    reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    BEGIN_ARRAY     reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    ZERO            reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    DIGITS          reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)
    END_OBJECT      reduce using rule 38 (frac -> DECIMAL_POINT DIGITS .)


state 41

    (34) float -> int frac exp .

    $end            reduce using rule 34 (float -> int frac exp .)
    VALUE_SEPARATOR reduce using rule 34 (float -> int frac exp .)
    END_ARRAY       reduce using rule 34 (float -> int frac exp .)
    TRUE            reduce using rule 34 (float -> int frac exp .)
    FALSE           reduce using rule 34 (float -> int frac exp .)
    NULL            reduce using rule 34 (float -> int frac exp .)
    QUOTATION_MARK  reduce using rule 34 (float -> int frac exp .)
    MINUS           reduce using rule 34 (float -> int frac exp .)
    BEGIN_OBJECT    reduce using rule 34 (float -> int frac exp .)
    BEGIN_ARRAY     reduce using rule 34 (float -> int frac exp .)
    ZERO            reduce using rule 34 (float -> int frac exp .)
    DIGITS          reduce using rule 34 (float -> int frac exp .)
    END_OBJECT      reduce using rule 34 (float -> int frac exp .)


state 42

    (41) string -> QUOTATION_MARK chars QUOTATION_MARK .

    NAME_SEPARATOR  reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    $end            reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    VALUE_SEPARATOR reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    END_ARRAY       reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    TRUE            reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    FALSE           reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    NULL            reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    QUOTATION_MARK  reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    MINUS           reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    BEGIN_OBJECT    reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    BEGIN_ARRAY     reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    ZERO            reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    DIGITS          reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)
    END_OBJECT      reduce using rule 41 (string -> QUOTATION_MARK chars QUOTATION_MARK .)


state 43

    (43) chars -> chars char .

    QUOTATION_MARK  reduce using rule 43 (chars -> chars char .)
    UNESCAPED       reduce using rule 43 (chars -> chars char .)


state 44

    (44) char -> UNESCAPED .

    QUOTATION_MARK  reduce using rule 44 (char -> UNESCAPED .)
    UNESCAPED       reduce using rule 44 (char -> UNESCAPED .)


state 45

    (26) array_end -> END_ARRAY .

    $end            reduce using rule 26 (array_end -> END_ARRAY .)
    VALUE_SEPARATOR reduce using rule 26 (array_end -> END_ARRAY .)
    END_ARRAY       reduce using rule 26 (array_end -> END_ARRAY .)
    TRUE            reduce using rule 26 (array_end -> END_ARRAY .)
    FALSE           reduce using rule 26 (array_end -> END_ARRAY .)
    NULL            reduce using rule 26 (array_end -> END_ARRAY .)
    QUOTATION_MARK  reduce using rule 26 (array_end -> END_ARRAY .)
    MINUS           reduce using rule 26 (array_end -> END_ARRAY .)
    BEGIN_OBJECT    reduce using rule 26 (array_end -> END_ARRAY .)
    BEGIN_ARRAY     reduce using rule 26 (array_end -> END_ARRAY .)
    ZERO            reduce using rule 26 (array_end -> END_ARRAY .)
    DIGITS          reduce using rule 26 (array_end -> END_ARRAY .)
    END_OBJECT      reduce using rule 26 (array_end -> END_ARRAY .)


state 46

    (21) elements_not_final -> elements value . VALUE_SEPARATOR
    (22) elements_final -> elements value .

    VALUE_SEPARATOR shift and go to state 57
    END_ARRAY       reduce using rule 22 (elements_final -> elements value .)
    TRUE            reduce using rule 22 (elements_final -> elements value .)
    FALSE           reduce using rule 22 (elements_final -> elements value .)
    NULL            reduce using rule 22 (elements_final -> elements value .)
    QUOTATION_MARK  reduce using rule 22 (elements_final -> elements value .)
    MINUS           reduce using rule 22 (elements_final -> elements value .)
    BEGIN_OBJECT    reduce using rule 22 (elements_final -> elements value .)
    BEGIN_ARRAY     reduce using rule 22 (elements_final -> elements value .)
    ZERO            reduce using rule 22 (elements_final -> elements value .)
    DIGITS          reduce using rule 22 (elements_final -> elements value .)


state 47

    (23) array -> array_begin elements array_end .

    VALUE_SEPARATOR reduce using rule 23 (array -> array_begin elements array_end .)
    END_ARRAY       reduce using rule 23 (array -> array_begin elements array_end .)
    TRUE            reduce using rule 23 (array -> array_begin elements array_end .)
    FALSE           reduce using rule 23 (array -> array_begin elements array_end .)
    NULL            reduce using rule 23 (array -> array_begin elements array_end .)
    QUOTATION_MARK  reduce using rule 23 (array -> array_begin elements array_end .)
    MINUS           reduce using rule 23 (array -> array_begin elements array_end .)
    BEGIN_OBJECT    reduce using rule 23 (array -> array_begin elements array_end .)
    BEGIN_ARRAY     reduce using rule 23 (array -> array_begin elements array_end .)
    ZERO            reduce using rule 23 (array -> array_begin elements array_end .)
    DIGITS          reduce using rule 23 (array -> array_begin elements array_end .)
    END_OBJECT      reduce using rule 23 (array -> array_begin elements array_end .)
    $end            reduce using rule 23 (array -> array_begin elements array_end .)


state 48

    (9) object -> object_begin members object_end .

    $end            reduce using rule 9 (object -> object_begin members object_end .)
    VALUE_SEPARATOR reduce using rule 9 (object -> object_begin members object_end .)
    END_ARRAY       reduce using rule 9 (object -> object_begin members object_end .)
    TRUE            reduce using rule 9 (object -> object_begin members object_end .)
    FALSE           reduce using rule 9 (object -> object_begin members object_end .)
    NULL            reduce using rule 9 (object -> object_begin members object_end .)
    QUOTATION_MARK  reduce using rule 9 (object -> object_begin members object_end .)
    MINUS           reduce using rule 9 (object -> object_begin members object_end .)
    BEGIN_OBJECT    reduce using rule 9 (object -> object_begin members object_end .)
    BEGIN_ARRAY     reduce using rule 9 (object -> object_begin members object_end .)
    ZERO            reduce using rule 9 (object -> object_begin members object_end .)
    DIGITS          reduce using rule 9 (object -> object_begin members object_end .)
    END_OBJECT      reduce using rule 9 (object -> object_begin members object_end .)


state 49

    (11) object_end -> END_OBJECT .

    $end            reduce using rule 11 (object_end -> END_OBJECT .)
    VALUE_SEPARATOR reduce using rule 11 (object_end -> END_OBJECT .)
    END_ARRAY       reduce using rule 11 (object_end -> END_OBJECT .)
    TRUE            reduce using rule 11 (object_end -> END_OBJECT .)
    FALSE           reduce using rule 11 (object_end -> END_OBJECT .)
    NULL            reduce using rule 11 (object_end -> END_OBJECT .)
    QUOTATION_MARK  reduce using rule 11 (object_end -> END_OBJECT .)
    MINUS           reduce using rule 11 (object_end -> END_OBJECT .)
    BEGIN_OBJECT    reduce using rule 11 (object_end -> END_OBJECT .)
    BEGIN_ARRAY     reduce using rule 11 (object_end -> END_OBJECT .)
    ZERO            reduce using rule 11 (object_end -> END_OBJECT .)
    DIGITS          reduce using rule 11 (object_end -> END_OBJECT .)
    END_OBJECT      reduce using rule 11 (object_end -> END_OBJECT .)


state 50

    (13) members -> pair_and_separator members .

    END_OBJECT      reduce using rule 13 (members -> pair_and_separator members .)


state 51

    (15) pair -> key value_abst .

    VALUE_SEPARATOR reduce using rule 15 (pair -> key value_abst .)
    END_OBJECT      reduce using rule 15 (pair -> key value_abst .)


state 52

    (16) value_abst -> value .

    VALUE_SEPARATOR reduce using rule 16 (value_abst -> value .)
    END_OBJECT      reduce using rule 16 (value_abst -> value .)


state 53

    (14) pair_and_separator -> pair VALUE_SEPARATOR .

    QUOTATION_MARK  reduce using rule 14 (pair_and_separator -> pair VALUE_SEPARATOR .)


state 54

    (17) key -> string NAME_SEPARATOR .

    TRUE            reduce using rule 17 (key -> string NAME_SEPARATOR .)
    FALSE           reduce using rule 17 (key -> string NAME_SEPARATOR .)
    NULL            reduce using rule 17 (key -> string NAME_SEPARATOR .)
    QUOTATION_MARK  reduce using rule 17 (key -> string NAME_SEPARATOR .)
    MINUS           reduce using rule 17 (key -> string NAME_SEPARATOR .)
    BEGIN_OBJECT    reduce using rule 17 (key -> string NAME_SEPARATOR .)
    BEGIN_ARRAY     reduce using rule 17 (key -> string NAME_SEPARATOR .)
    ZERO            reduce using rule 17 (key -> string NAME_SEPARATOR .)
    DIGITS          reduce using rule 17 (key -> string NAME_SEPARATOR .)


state 55

    (37) exp -> E PLUS DIGITS .

    $end            reduce using rule 37 (exp -> E PLUS DIGITS .)
    VALUE_SEPARATOR reduce using rule 37 (exp -> E PLUS DIGITS .)
    END_ARRAY       reduce using rule 37 (exp -> E PLUS DIGITS .)
    TRUE            reduce using rule 37 (exp -> E PLUS DIGITS .)
    FALSE           reduce using rule 37 (exp -> E PLUS DIGITS .)
    NULL            reduce using rule 37 (exp -> E PLUS DIGITS .)
    QUOTATION_MARK  reduce using rule 37 (exp -> E PLUS DIGITS .)
    MINUS           reduce using rule 37 (exp -> E PLUS DIGITS .)
    BEGIN_OBJECT    reduce using rule 37 (exp -> E PLUS DIGITS .)
    BEGIN_ARRAY     reduce using rule 37 (exp -> E PLUS DIGITS .)
    ZERO            reduce using rule 37 (exp -> E PLUS DIGITS .)
    DIGITS          reduce using rule 37 (exp -> E PLUS DIGITS .)
    END_OBJECT      reduce using rule 37 (exp -> E PLUS DIGITS .)


state 56

    (35) exp -> E MINUS DIGITS .

    $end            reduce using rule 35 (exp -> E MINUS DIGITS .)
    VALUE_SEPARATOR reduce using rule 35 (exp -> E MINUS DIGITS .)
    END_ARRAY       reduce using rule 35 (exp -> E MINUS DIGITS .)
    TRUE            reduce using rule 35 (exp -> E MINUS DIGITS .)
    FALSE           reduce using rule 35 (exp -> E MINUS DIGITS .)
    NULL            reduce using rule 35 (exp -> E MINUS DIGITS .)
    QUOTATION_MARK  reduce using rule 35 (exp -> E MINUS DIGITS .)
    MINUS           reduce using rule 35 (exp -> E MINUS DIGITS .)
    BEGIN_OBJECT    reduce using rule 35 (exp -> E MINUS DIGITS .)
    BEGIN_ARRAY     reduce using rule 35 (exp -> E MINUS DIGITS .)
    ZERO            reduce using rule 35 (exp -> E MINUS DIGITS .)
    DIGITS          reduce using rule 35 (exp -> E MINUS DIGITS .)
    END_OBJECT      reduce using rule 35 (exp -> E MINUS DIGITS .)


state 57

    (21) elements_not_final -> elements value VALUE_SEPARATOR .

    END_ARRAY       reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)
    TRUE            reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)
    FALSE           reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)
    NULL            reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)
    QUOTATION_MARK  reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)
    MINUS           reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)
    BEGIN_OBJECT    reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)
    BEGIN_ARRAY     reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)
    ZERO            reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)
    DIGITS          reduce using rule 21 (elements_not_final -> elements value VALUE_SEPARATOR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for END_ARRAY in state 2 resolved as shift
